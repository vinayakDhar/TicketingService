# Service properties
ticket.RANDOM_CODE_LENGTH = 10
ticket.CONFIRMATION_PREFIX = BOOK
ticket.BOOKING_HOLD_TIME = 45000

# SQL queries
ticket.fetch_seat_by_level = SELECT level_id, level_name, price, rows, seats_in_row FROM seats WHERE level_id = ?
ticket.fetch_seats = SELECT level_id, level_name, price, rows, seats_in_row FROM seats

ticket.fetch_all_bookings = SELECT booking_id, email, time, confirmation, confirmation_code from bookings
ticket.fetch_all_unconfirmed_bookings = SELECT booking_id, email, time, confirmation, confirmation_code from bookings WHERE confirmation = false
ticket.fetch_booking_by_id_and_email = SELECT booking_id, email, time, confirmation, confirmation_code from bookings WHERE booking_id = ? AND email = ?
ticket.fetch_all_tickets = SELECT booking_id, level_id, count from tickets
ticket.create_booking = INSERT INTO bookings(email) VALUES (?)
ticket.add_tickets_for_booking = INSERT INTO tickets(booking_id, level_id, count) VALUES(?,?,?)

ticket.fetch_available_tickets_for_level = SELECT (s.rows * s.seats_in_row) - ISNULL(SUM(t.count), 0) from seats s \
											LEFT JOIN tickets t on s.level_id = t.level_id WHERE s.level_id = ? \
											GROUP BY s.level_id;
ticket.fetch_available_tickets_by_level = SELECT s.level_id, (s.rows * s.seats_in_row) - ISNULL(SUM(t.count), 0) AS count from seats s \
										LEFT JOIN tickets t on s.level_id = t.level_id \
										GROUP BY s.level_id \
										ORDER BY s.level_id ASC

ticket.confirm_booking_by_id = UPDATE bookings SET confirmation = ?, confirmation_code = ? \
								WHERE confirmation = false and booking_id = ? AND email = ?
	
ticket.delete_booking_by_expiry_time = DELETE FROM bookings WHERE (CURRENT_TIMESTAMP() - time) > ? 							
ticket.delete_tickets_by_booking_id = DELETE FROM bookings WHERE booking_id = ?
ticket.delete_booking_by_booking_id = DELETE FROM bookings WHERE booking_id = ?

								
ticket.fetch_booking_lock = SELECT lock FROM sync FOR UPDATE OF lock
ticket.update_booking_lock = UPDATE sync SET lock = true